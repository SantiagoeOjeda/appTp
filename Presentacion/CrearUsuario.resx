<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>